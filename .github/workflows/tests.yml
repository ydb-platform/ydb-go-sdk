name: tests
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
jobs:
  unit:
    strategy:
      matrix:
        go-version: [1.14.x, 1.15.x, 1.16.x, 1.17.x, 1.18.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: go test -race -tags fast -coverprofile unit.txt -covermode atomic ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./unit.txt
          flags: unit,${{ matrix.os }},${{ matrix.go-version }}
          name: unit
  table:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        ports:
          - 2135:2135
          - 2136:2136
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
      YDB_CONNECTION_STRING: grpcs://localhost:2135/local
      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
      YDB_SHUTDOWN_URLS: http://localhost:8765/actors/kqp_proxy?force_shutdown=all
      HIDE_APPLICATION_OUTPUT: 1
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Wait database available
        run: bash ./.github/scripts/wait-ydb-container.sh
      - name: Test
        run: go test -race -coverpkg=./... -coverprofile table.txt -covermode atomic ./table/table_e2e_test.go
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./table.txt
          flags: table,e2e,integration,${{ matrix.os }},${{ matrix.go-version }}
          name: table
  ratelimiter:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        ports:
          - 2135:2135
          - 2136:2136
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
      YDB_CONNECTION_STRING: grpcs://localhost:2135/local
      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Wait database available
        run: bash ./.github/scripts/wait-ydb-container.sh
      - name: Test
        run: go test -race -coverpkg=./... -coverprofile ratelimiter.txt -covermode atomic ./ratelimiter/ratelimiter_e2e_test.go
        shell: bash
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./ratelimiter.txt
          flags: ratelimiter,e2e,integration,${{ matrix.os }},${{ matrix.go-version }}
          name: ratelimiter
  scripting:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        ports:
          - 2135:2135
          - 2136:2136
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
      YDB_CONNECTION_STRING: grpcs://localhost:2135/local
      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Wait database available
        run: bash ./.github/scripts/wait-ydb-container.sh
      - name: Test
        run: go test -race -coverpkg=./... -coverprofile scripting.txt -covermode atomic ./scripting/scripting_e2e_test.go
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./scripting.txt
          flags: scripting,e2e,integration,${{ matrix.os }},${{ matrix.go-version }}
          name: scripting
  topic:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        ports:
          - 2135:2135
          - 2136:2136
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
      YDB_CONNECTION_STRING: grpcs://localhost:2135/local
      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Wait database available
        run: bash ./.github/scripts/wait-ydb-container.sh
      - name: Test topic client
        run: go test -race -coverpkg=./... -coverprofile topic.txt -covermode atomic ./topic/client_e2e_test.go ./topic/reader_e2e_test.go
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./topic.txt
          flags: topic,e2e,integration,${{ matrix.os }},${{ matrix.go-version }}
          name: topic
  discovery:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        ports:
          - 2135:2135
          - 2136:2136
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
      YDB_CONNECTION_STRING: grpcs://localhost:2135/local
      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Wait database available
        run: bash ./.github/scripts/wait-ydb-container.sh
      - name: Test
        run: go test -race -coverpkg=./... -coverprofile discovery.txt -covermode atomic ./discovery/discovery_e2e_test.go
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./discovery.txt
          flags: discovery,e2e,integration,${{ matrix.os }},${{ matrix.go-version }}
          name: discovery
  connection:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
    services:
      ydb:
        image: cr.yandex/yc/yandex-docker-local-ydb:latest
        ports:
          - 2135:2135
          - 2136:2136
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_LOCAL_SURVIVE_RESTART: true
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost'
    env:
      OS: ${{ matrix.os }}
      GO: ${{ matrix.go-version }}
      YDB_CONNECTION_STRING: grpcs://localhost:2135/local
      YDB_SSL_ROOT_CERTIFICATES_FILE: /tmp/ydb_certs/ca.pem
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Wait database available
        run: bash ./.github/scripts/wait-ydb-container.sh
      - name: Test
        run: go test -race -coverpkg=./... -coverprofile connection.txt -covermode atomic ./connection_e2e_test.go
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./connection.txt
          flags: connection,e2e,integration,${{ matrix.os }},${{ matrix.go-version }}
          name: connection
