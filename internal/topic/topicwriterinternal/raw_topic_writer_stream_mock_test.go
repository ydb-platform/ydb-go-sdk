// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ydb-platform/ydb-go-sdk/v3/internal/topic/topicwriterinternal (interfaces: RawTopicWriterStream)

package topicwriterinternal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	rawtopicwriter "github.com/ydb-platform/ydb-go-sdk/v3/internal/grpcwrapper/rawtopic/rawtopicwriter"
)

// MockRawTopicWriterStream is a mock of RawTopicWriterStream interface.
type MockRawTopicWriterStream struct {
	ctrl     *gomock.Controller
	recorder *MockRawTopicWriterStreamMockRecorder
}

// MockRawTopicWriterStreamMockRecorder is the mock recorder for MockRawTopicWriterStream.
type MockRawTopicWriterStreamMockRecorder struct {
	mock *MockRawTopicWriterStream
}

// NewMockRawTopicWriterStream creates a new mock instance.
func NewMockRawTopicWriterStream(ctrl *gomock.Controller) *MockRawTopicWriterStream {
	mock := &MockRawTopicWriterStream{ctrl: ctrl}
	mock.recorder = &MockRawTopicWriterStreamMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRawTopicWriterStream) EXPECT() *MockRawTopicWriterStreamMockRecorder {
	return m.recorder
}

// CloseSend mocks base method.
func (m *MockRawTopicWriterStream) CloseSend() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseSend indicates an expected call of CloseSend.
func (mr *MockRawTopicWriterStreamMockRecorder) CloseSend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSend", reflect.TypeOf((*MockRawTopicWriterStream)(nil).CloseSend))
}

// Recv mocks base method.
func (m *MockRawTopicWriterStream) Recv() (rawtopicwriter.ServerMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Recv")
	ret0, _ := ret[0].(rawtopicwriter.ServerMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Recv indicates an expected call of Recv.
func (mr *MockRawTopicWriterStreamMockRecorder) Recv() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recv", reflect.TypeOf((*MockRawTopicWriterStream)(nil).Recv))
}

// Send mocks base method.
func (m *MockRawTopicWriterStream) Send(arg0 rawtopicwriter.ClientMessage) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockRawTopicWriterStreamMockRecorder) Send(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockRawTopicWriterStream)(nil).Send), arg0)
}
